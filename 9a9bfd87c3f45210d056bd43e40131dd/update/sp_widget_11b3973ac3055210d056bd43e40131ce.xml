<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope) {
  /* widget controller */
  var c = this;
	
	$scope.clickButton = function(x) {
		
		c.data.answer = x; // update server object with info from client script
		// console.log(x);
		c.server.update(); // run the server again, populates the input object
	}
};]]></client_script>
        <controller_as>c</controller_as>
        <css>.header {
	padding: 50px;
  font-size: 35px;
}

.title {
  width: 100%;
  // border-radius: 5px;
  padding: 10px;
	background-color: #1F8476;
  font-size: 30px;
  color: white;
  margin-top: 50px;
  margin-bottom: 0;
}

table {
	width: 100%;
}

th {
	background-color: light blue;
  font-size: 15px;
  padding: 15px;
}

td {
	padding: 5px;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>active_incidents</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Active Incidents</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	
	// Running from a c.server.update()
	if (input) { // input is updated version of original data object
		console.log('Server updated: ' + input.answer);
	}

	// data.userName = gs.getUserDisplayName();
	data.table = {
		"list" : []
	};
	data.answer = "";
	
	var incident = new GlideRecord('x_968807_public_0_incidents'); // table name
	// incident.addQuery('Status','Open'); // filter by status
	incident.orderBy('sys_created_on'); //
	incident.query();
	
	while (incident.next()) {
		var obj = {};
		obj.number = incident.getValue('number');
		obj.name = incident.getValue('type');
		obj.status = incident.getValue('status');
		obj.location = incident.getValue('location');
		obj.locationAdd = incident.getValue('locaion_additional');
		obj.assigned = incident.getDisplayValue('assigned_to');
		
		data.table.list.push(obj);
	}
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-10-08 22:09:52</sys_created_on>
        <sys_id>11b3973ac3055210d056bd43e40131ce</sys_id>
        <sys_mod_count>89</sys_mod_count>
        <sys_name>Active Incidents</sys_name>
        <sys_package display_value="Public Safety" source="x_968807_public_0">9a9bfd87c3f45210d056bd43e40131dd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Public Safety">9a9bfd87c3f45210d056bd43e40131dd</sys_scope>
        <sys_update_name>sp_widget_11b3973ac3055210d056bd43e40131ce</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-10-10 20:12:33</sys_updated_on>
        <template><![CDATA[<div>
  <!-- your widget template -->

  <!-- 
  <p class="header">
    Hello, {{c.data.userName}}!
  </p>
-->

  <p class="title">List of Incidents
  </p>
  <table class="table-striped">
    <tr>
      <th></th>
      <th>Number</th>
      <th>Type</th>
      <th>Status</th>
      <th>Location</th>
      <th>Location Additional</th>
      <th>Assigned To</th>
     </tr>
  
    <tr ng-repeat="row in c.data.table.list">
       <td>
        <button class="btn btn-success" name="clickButton" ng-click="clickButton(row.name)">
          Click
        </button>
      </td>
      <td>
        {{row.number}}
      </td>
      <td>
        {{row.name}}
      </td>
      <td>
        {{row.status}}
      </td>
      <td>
        {{row.location}}
      </td>
       <td>
        {{row.locationAdd}}
      </td>
      <td>
        {{row.assigned}}
      </td>	
    </tr>
  </table>
</div>

<!-- 
<div>
  <pre>
  	{{c.data.table | json }}
	</pre>
</div>
-->]]></template>
    </sp_widget>
</record_update>
